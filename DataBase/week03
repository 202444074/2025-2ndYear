  17p
싱글유저 queue는 first in first out형태, 반대의 last in first out은 스택 구조
멀티유저 시스템은 엄청난 컴퓨터 파워의 발전이 있는것이 전제이다. 1시간짜리 작업 4개가 모여서 4시간이 걸린디면 이건 발전이 아니기 때문에 여러 작업이 모여도 시간이 적게 걸려야함
  18p
실시간의 처리는 인터넷에 실시간으로 연결되어 있어야 하기에 온라인이라는 단어가 생략되어 있음
  20p
가장 중요한 파일들을 마스터 파일이라함
트랜잭션도 마스터 파일과 같이 중요함
올드 마스터 파일 뉴 마스터 파일 그림 알아두기
  22p
sort key는 유일한 값, 짧은 길이를 가진 값을 기준으로 정함
  23-27P
real time processing이 가능하게 함
포인터 주소 개념과 비슷함, 자료구조에서는 링크라는 단어 사용
키를 정렬해서 찾기 때문에 데이터는 정렬이 안되더라도 키는 정렬함
인덱스는 키와 데이터를 연결해서 메모리가 많이 필요하고 관리 비용도 비싸다
  28-29p
주소의 시작을 알파 레코드의 길이를 L이라고 하면 key i의 주소를 계산할 수 있음
위의 인덱스 파일의 단점을 보완함
위의 계산식으로 무조건 i번에는 key i가 들어가야 해서 연속적이지 않은 값이 들어오면 사용하지 못하는 죽은 공간인 unused space가 존재함
  31p
위 문제를 해결하려고 해싱 함수를 사용
해싱 함수 : 키 숫자를 10으로 나눠 나머지 부분을 상대주소로 사용
하지만 충돌현상으로 동거자가 발생함 (이런 단어들 중요하다고 하심)
  32p(과제)
그래서 해싱 함수는 여러 종류가 있는데 그 여러가지 방법을 조사하는게 과제
  33p
SAM ISAM DAM은 레코드가 연속적이지만 링은 레코드가 멀리 떨어짐
논리적으로는 SAM과 비슷함
  35p
1학년 알고리즘에 배운 순서도 같은거
중요하진 않고 있다는건 알아둬라
중간에 순서도 하나를 만들면 왼쪽의 파일연산 8개가 자동으로 생성됨
-과제-
해싱 함수 조사
주신 입력 파일을 읽어서 총점 평균 등을 정리한 출력 파일을 만들기
그래서 프로그램 파일과 출력 파일 두개를 만들어야함
